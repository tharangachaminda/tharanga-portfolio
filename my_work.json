[
    {
        "header": "End-to-end",
        "application_url": "black_friday",
        "image": "black_friday.png",
        "title": "Black Friday Purchase Prediction",
        "description": "This project will understand the customer purchase behaviour (specifically, purchase amount) against various products of different categories. They have shared purchase summary of various customers for selected high volume products from last month.",
        "github": "https://github.com/tharangachaminda/Black_Friday_Purchase",
        "icons": ["python", "jupyterlab", "flask", "aws"]
    },

    {
        "header": "End-to-end",
        "application_url": "banknotes_authentication",
        "image": "bank_notes.png",
        "title": "Banknotes Authentication",
        "description": "Banknote analysis refers to the examination of paper currency to determine its legitimacy and identify potential counterfeits. In this python project, I am trying to build a <b>Classification Machine Learning models</b> to predict banknotes are genuine or forged.",
        "github": "https://github.com/tharangachaminda/banknotes_analysis",
        "icons": ["python", "jupyterlab", "flask", "aws"]
    },

    {
        "header": "Analysis",
        "application_url": "falcon9_dashboard",
        "image": "falcon_9.png",
        "title": "SpaceX Falcon 9 1st Stage Landing Prediction",
        "description": "SpaceX re-uses the Stage 1 boosters of Falcon 9 rockets. This project is an analysis for successful Stage 1 landing prediction. I have used SpaceX API and Webscraping for data collection, SQlite database for data storage.",
        "github": "https://github.com/tharangachaminda/Falcon9_First_stage_Landing",
        "icons": ["python", "jupyterlab", "sql", "sqlite", "folium", "plotly-dash", "aws"]
    },

    {
        "header": "Recommender System",
        "image": "netflix.png",
        "title": "Netflix Recommender System (Popularity Based)",
        "description": "Netflix Recommender system is one of the best recommender systems in the world. In this project I've used <b>movies and rating</b> datasets and <b>NLTK toolkit</b> to build this popularity based recommender system.",
        "github": "https://github.com/tharangachaminda/popularity-based-recommendation-system",
        "icons": ["python", "jupyterlab", "nltk", "flask", "aws"]
    },

    {
        "header": "Recommender System",
        "application_url": "recommender_content_based",
        "image": "netflix.png",
        "title": "Netflix Recommender System (Content Based)",
        "description": "Netflix Recommender system is one of the best recommender systems in the world. In this project I've used <b>movies datasets</b> and <b>Cosine similarity</b> to build this content based recommender system.",
        "github": "https://github.com/tharangachaminda/content_based_recommender_system",
        "icons": ["python", "jupyterlab", "nltk", "flask", "aws"]
    },

    {
        "header": "Analysis",
        "image": "bookstore.png",
        "title": "Bookstore Web scraping",
        "description": "In this project I have built a mechanism to collect information about every book in the website, scraping through pagination. This project is associated with https://books.toscrape.com/ website which is specially design for training web scraping. ",
        "github": "https://github.com/tharangachaminda/bookstore_webscraping",
        "icons": ["python", "jupyterlab", "flask", "aws"]
    },

    {
        "header": "End-to-end (Deep Learning)",
        "application_url": "mood_detection",
        "image": "mood_classifier.png",
        "title": "Mood Classifier",
        "description": "A mood classification is a type of machine learning task that is used to recognize human moods or emotions. In this project I have implemented a CNN model for recognizing smiling or not smiling humans using Tensorflow Keras Sequential API.",
        "github": "https://github.com/tharangachaminda/cnn_mood_classifier",
        "icons": ["python", "jupyterlab", "tensorflow", "flask", "aws", "aws_s3", "docker"]
    },

    {
        "header": "End-to-end (Deep Learning - CNN)",
        "application_url": "sign_language_recognition",
        "image": "sign_language_digits.png",
        "title": "Sign Language Digits Recognition",
        "description": "Sing language is a visual-gestural language used by deaf and hard-to-hearing individuals to convey imformation, thoughts and emotions. In this project I have implemented a CNN model for recognizing sign language digits 0 to 5 using Keras Functional API.",
        "github": "https://github.com/tharangachaminda/cnn_sign_language_detection",
        "icons": ["python", "jupyterlab", "tensorflow", "flask", "aws", "aws_s3", "docker"]
    },

    {
        "header": "End-to-end (Deep Learning - Residual Network)",
        "application_url": "sign_language_recognition_resnet",
        "image": "sign_language_digits.png",
        "title": "Sign Language Digits Recognition",
        "description": "Very deep neural networks suffer from a problem called vanishing/exploding gradients. Deep Residual Learning for Image Recognition resolves theis issue. A Residual Network, also known as ResNet, is a type of deep learning network architecture that introduces the concept of residual learning.",
        "github": "https://github.com/tharangachaminda/cnn_resnet",
        "icons": ["python", "jupyterlab", "tensorflow", "flask", "aws"]
    },

    {
        "header": "End-to-end (Deep Learning - MobileNetV2)",
        "application_url": "alpaca_mobilenetv2",
        "image": "alpaca_mobilenetv2.png",
        "title": "Binary Classification (Transfer Learning)",
        "description": "Transfer Learning in Neural Network is a technique used in machine learning where knowledge gained from training one model (source domain) is transferred and applied to a different but related model (target domain). This involves taking a pre-trained model developed for one task and fine-tuned or using its learned features to solve another related task.",
        "github": "https://github.com/tharangachaminda/transfer_learning_with_mobilenet_v2",
        "icons": ["python", "jupyterlab", "tensorflow", "flask", "aws", "aws_s3", "docker"]
    },
    
    {
        "header": "End-to-end (Deep Learning - LSTM)",
        "application_url": "co2_emission_lstm",
        "image": "co2_emission.png",
        "title": "CO<sub>2</sub> emission prediction of Sri Lanka (LSTM)",
        "description": "LSTM (Long Short-Term Memory) is a type of Recurrent Neural Network (RNN) architecture designed to efficiently capture and utilize long-term dependencies in <b>sequential data</b>. In this project, I will be developping an LSTM model to predict future CO<sub>2</sub> emission. CO<sub>2</sub> emission data is a Timeseries dataset, which fits for sequential model perfectly.",
        "github": "https://github.com/tharangachaminda/co2_emission_prediction",
        "icons": ["python", "jupyterlab", "tensorflow", "flask", "aws", "aws_s3", "docker"]
    },
    
    {
        "header": "Analysis",
        "application_url": "co2_emission_dashboard",
        "image": "co2_emission_analysis.png",
        "title": "CO<sub>2</sub> emission around the world.",
        "description": "Countries vary significantly in their CO<sub>2</sub> emission levels due to differences in industrialization, energy consumption, transportation, and policies regarding environmental regulations. Some nations, particularly highly industrialized ones like China, the United States, India, and the European Union countries, tend to produce higher CO<sub>2</sub> emissions.",
        "github": "https://github.com/tharangachaminda/co2_emission_analysis",
        "icons": ["python", "jupyterlab", "folium", "plotly-dash", "aws"]
    }

]